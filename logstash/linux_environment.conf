input {
  file {
    path => "/home/user/ENVIRONMENT/113_25_01_01_linux/*.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  # Ajout de csv_path
  mutate {
    add_field => { "csv_path" => "%{[log][file][path]}" }
  }
  if [csv_path] =~ "linux_connections.csv" {
    csv {
      columns => ["computer_name", "connection_date", "user", "src_ip", "source_file"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_firewall_rules.csv" {
    csv {
        columns => ["computer_name", "chain", "protocol", "policy", "src_ip", "src_port", "dest_ip", "dest_port", "firewall"]
        separator => ","
        skip_header => "true"
    }
  }

  else if [csv_path] =~ "linux_installed_apps.csv" {
    csv {
        columns => ["computer_name", "package_name", "install_date", "version"]
        separator => ","
        skip_header => "true"
    }
  }

else if [csv_path] =~ "linux_crontab.csv" {
    csv {
        columns => ["computer_name", "user", "scheduled", "task", "source_file"]
        separator => ","
        skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_network_info.csv" {
    csv {
        columns => ["computer_name", "interface", "ip_address", "netmask", "gateway"]
        separator => ","
        skip_header => "true"
    }
  }

  else if [csv_path] =~ "linux_services.csv" {
    csv {
        columns => ["computer_name", "service_name", "status", "status_at_boot"]
        separator => ","
        skip_header => "true"
    }
  }

  else if [csv_path] =~ "linux_system_info.csv" {
    csv {
        columns => ["computer_name", "distro", "distro_version", "installation_date", "ntp_server", "dns_server", "last_update", "last_event"]
        separator => ","
        skip_header => "true"
    }
  }

  else if [csv_path] =~ "linux_users_and_groups.csv" {
    csv {
        columns => ["computer_name", "username", "uid", "gid", "groups"]
        separator => ","
        skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_disk_usage.csv" {
    csv {
        columns => ["computer_name", "directory", "percent_used"]
        separator => ","
        skip_header => "true"
    }
  }

  else if [csv_path] =~ "linux_browsing_history.csv" {
    csv {
      columns => ["computer_name", "source", "user", "url_title", "link", "search_date"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_websites.csv" {
    csv {
      columns => ["computer_name", "website_name", "website_root", "listening_port", "webserver"]
      separator => ","
      skip_header => "true"
    }
  }
   else if [csv_path] =~ "linux_docker.csv" {
    csv {
      columns => ["computer_name", "container_name", "exposed_ports", "volumes", "container_logs", "overlay_directory"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_command_history.csv" {
    csv {
      columns => ["computer_name", "user", "shell", "command"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_files_of_interest" {
    csv {
      columns => ["computer_name", "type", "match", "source_file"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "linux_inode_table" {
    csv {
      columns => ["computer_name", "inode", "deleted", "source_path", "ctime", "mtime", "atime"]
      separator => ","
      skip_header => "true"
    }
 }
   else if [csv_path] =~ "crypto" {
    csv {
      columns => ["computer_name", "type", "match", "source_file", "verified"]
      separator => ","
      skip_header => "true"
    }
 }
}


output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    action => "index"
    hosts => ["127.0.0.1:9200"]
    index => "linux_environment_index"
  }
}
