input {
  file {
    path => "/home/user/ENVIRONMENT/113_25_01_01_windows/*.csv"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  # Ajout de csv_path
  mutate {
    add_field => { "csv_path" => "%{[log][file][path]}" }
  }
  if [csv_path] =~ "windows_services" {
    csv {
      columns => ["computer_name", "service_name", "start_type"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_roles" {
    csv {
      columns => ["computer_name", "role_name", "install_state"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_system_info" {
    csv {
      columns => ["computer_name", "windows_version", "installation_date", "ntp_server", "last_update", "last_event", "keyboard_layout"]
      separator => ","
      skip_header => "true"
    }
    date {
      match => [ "installation_date", "YYYY-MM-dd" ]
      target => "installation_date"
    }
    date {
      match => [ "last_update", "YYYY-MM-dd HH:mm:ss" ]
      target => "last_update"
    }
  }
  else if [csv_path] =~ "windows_network_info" {
    csv {
      columns => ["computer_name", "interface", "ip_address", "netmask", "gateway", "dns_server"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_users" {
    csv {
      columns => ["computer_name", "username", "full_name", "account_type", "creation_date", "last_login_date", "login_count", "rid"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_groups" {
    csv {
      columns => ["computer_name", "groupname", "last_write", "users"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_installed_programs" {
    csv {
      columns => ["computer_name", "program_name", "program_version", "install_date"]
      separator => ","
      skip_header => "true"
    }
    date {
      match => [ "InstallDate", "YYYY-MM-dd" ]
      target => "install_date"
    }
  }
  else if [csv_path] =~ "windows_executed_programs" {
    csv {
      columns => ["computer_name", "filepath", "execution_date"]
      separator => ","
      skip_header => "true"
    }
    date {
      match => [ "execution_date", "ISO8601", "YYYY-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.SSS" ]
      target => "execution_date"
    }
  }

  else if [csv_path] =~ "windows_firewall_rules" {
    csv {
      columns => ["computer_name", "action", "active", "direction", "protocol", "profile", "srcport", "dstport", "app", "svc", "rule_name", "desc", "embedctxt"]
      separator => ","
      skip_header => "true"
    }
  }

  else if [csv_path] =~ "windows_browsing_history" {
    csv {
      columns => ["computer_name", "source", "user", "url_title", "link", "search_date"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_browsing_data" {
    csv {
      columns => ["computer_name", "source", "user", "ident", "creds", "platform", "saved_date"]
      separator => ","
      skip_header => "true"
    }
  }
  else if [csv_path] =~ "windows_scheduled_tasks" {
    csv {
      columns => ["computer_name", "task_name", "date", "action", "user", "schedule", "command"]
      separator => ","
      skip_header => "true"
    }
  }

  else if [csv_path] =~ "windows_files_of_interest" {
    csv {
      columns => ["computer_name", "type", "match", "source_file"]
      separator => ","
      skip_header => "true"
    }
  }
 else if [csv_path] =~ "(SYSTEM|SOFTWARE|SAM|NTUSER.DAT)" {
    csv {
      columns => ["computer_name", "hive", "subkey_name", "path", "timestamp", "values_count", "values", "actual_path"]
      separator => ","
      skip_header => "true"
    }
  }

  else if [csv_path] =~ "mft_parsed" {
    csv {
      columns => ["Record Number", "Good", "Active", "Record type", "Sequence Number", "Parent File Rec. #", "Parent File Rec. Seq. #", "Filename #1", "Std Info Creation date", "Std Info Modification date", "Std Info Access date", "Std Info Entry date", "FN Info Creation date", "FN Info Modification date", "FN Info Access date", "FN Info Entry date", "Object ID", "Birth Volume ID", "Birth Object ID", "Birth Domain ID", "Filename #2", "FN Info Creation date", "FN Info Modify date", "FN Info Access date", "FN Info Entry date", "Filename #3", "FN Info Creation date", "FN Info Modify date", "FN Info Access date", "FN Info Entry date", "Filename #4", "FN Info Creation date", "FN Info Modify date", "FN Info Access date", "FN Info Entry date", "Standard Information", "Attribute List", "Filename", "Object ID", "Volume Name", "Volume Info", "Data", "Index Root", "Index Allocation", "Bitmap", "Reparse Point", "EA Information", "EA", "Property Set", "Logged Utility Stream", "Log/Notes", "STF FN Shift", "uSec Zero", "ADS", "Possible Copy", "Possible Volume Move", "computer_name"]
      separator => ","
      skip_header => "true"
    }
  }

  else if [csv_path] =~ "crypto" {
    csv {
      columns => ["computer_name", "type", "match", "source_file", "verified"]
      separator => ","
      skip_header => "true"
    }
 }

}

output {
  stdout {
    codec => rubydebug
  }
  elasticsearch {
    action => "index"
    hosts => ["127.0.0.1:9200"]
    index => "windows_environment_index"
  }
}
